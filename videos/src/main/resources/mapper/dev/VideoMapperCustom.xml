<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.videos.mapper.VideoMapperCustom">
    <resultMap id="BaseResultMap" type="com.videos.vo.VideosVO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="audio_id" jdbcType="VARCHAR" property="audioId" />
        <result column="video_desc" jdbcType="VARCHAR" property="videoDesc" />
        <result column="video_path" jdbcType="VARCHAR" property="videoPath" />
        <result column="video_seconds" jdbcType="REAL" property="videoSeconds" />
        <result column="video_width" jdbcType="INTEGER" property="videoWidth" />
        <result column="video_height" jdbcType="INTEGER" property="videoHeight" />
        <result column="cover_path" jdbcType="VARCHAR" property="coverPath" />
        <result column="like_counts" jdbcType="BIGINT" property="likeCounts" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="face_image" jdbcType="VARCHAR" property="faceImage" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    </resultMap>

    <!--<select id="queryAllVideos" resultMap="BaseResultMap" parameterType="String">-->
        <!--select v.*,u.face_image as face_image,u.nickname as nickname from videos v-->
        <!--left join users u on u.id = v.user_id-->
        <!--where-->
        <!--1 = 1-->
        <!--<if test = "videoDesc !=null and videoDesc != '' ">-->
            <!--and v.video_desc like '%${videoDesc}%'-->
        <!--</if>-->
        <!--<if test="userId !=null and userId !='' ">-->
            <!--and v.user_id = #{userId}-->
        <!--</if>-->
        <!--and v.status = 0-->
        <!--order by v.create_time desc-->

    <!--</select>-->

    <!--根据搜索内容分页查询视频-->
    <select id="getVideoListByDesc" parameterType="java.lang.String" resultMap="BaseResultMap">
        select v.*,u.face_image,u.nickname from videos v left join users u on v.user_id = u.id
        where video_desc like CONCAT('%',#{videoDesc},'%') and v.status = 0 order by v.create_time desc
    </select>

    <!--分页查询所有视频-->
    <select id="queryAllVideos" resultMap="BaseResultMap">
        select v.*,u.face_image,u.nickname from videos v left join users u on v.user_id = u.id
        where v.status = 0 order by v.create_time desc limit #{page},#{pageSize}
    </select>

    <!--查询有多少条视频-->
    <select id="queryCount" resultType="java.lang.Integer">
        select count(*) from videos
    </select>

    <!--查询有多少条我的视频-->
    <select id="queryCountMyWork" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from videos where user_id = #{userId}
    </select>

    <!--查询有多少条我喜欢的视频-->
    <select id="queryCountMyLike" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from users_like_videos where user_id = #{userId}
    </select>

    <!--查询有多少条我关注的人的视频-->
    <select id="queryCountMyFollow" parameterType="java.lang.System" resultType="java.lang.Integer">
        select count(*) from videos where user_id in (select user_id from users_fans where fan_id = #{userId})
    </select>

    <!--查询我自己发的视频作品-->
    <select id="queryMyWorkVideos" resultMap="BaseResultMap">
        select v.*,u.face_image,u.nickname from videos v left join users u on v.user_id = u.id
        where u.id=#{userId} and v.status = 0 limit #{page},#{pageSize}
    </select>

    <!-- 查询我关注的人发的视频 -->
    <select id="queryMyFollowVideos" resultMap="BaseResultMap">
        select v.*,u.face_image,u.nickname from videos v left join users u on v.user_id = u.id
        where v.user_id in (select uf.user_id from users_fans uf where uf.fan_id = #{userId})
        and v.status = 0 limit #{page},#{pageSize}
    </select>

    <!-- 查询我喜欢的视频 -->
    <select id = "queryMyLikeVideos" resultMap="BaseResultMap">
        select v.*,u.face_image,u.nickname from videos v
        left join users u on v.user_id = u.id
        where v.id in (select ulv.video_id from users_like_videos ulv where ulv.user_id = #{userId})
        and v.status = 0 limit #{page},#{pageSize}
    </select>

    <update id = "addVideoLikeCount" parameterType="String">
        update videos set like_counts = like_counts + 1 where id = #{videoId}
    </update>

    <update id = "reduceVideoLikeCount" parameterType="String">
        update videos set like_counts = like_counts - 1 where id = #{videoId}
    </update>

</mapper>